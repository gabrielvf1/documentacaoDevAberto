{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bem Vindo ao WebServer Desing de Software Este e um software que tem por objetivo auxiliar alinos e professores na disciplina de design de sofware em no cumprimento das atividades. O ambiente O ambiente proporcionado pelo software mostra para os alunos uma lista de desafios propostos pelo professor e, para cada um desses permite o envio de uma solucao e tambem a visualizacao de envios passados.","title":"Home"},{"location":"#bem-vindo-ao-webserver-desing-de-software","text":"Este e um software que tem por objetivo auxiliar alinos e professores na disciplina de design de sofware em no cumprimento das atividades.","title":"Bem Vindo ao WebServer Desing de Software"},{"location":"#o-ambiente","text":"O ambiente proporcionado pelo software mostra para os alunos uma lista de desafios propostos pelo professor e, para cada um desses permite o envio de uma solucao e tambem a visualizacao de envios passados.","title":"O ambiente"},{"location":"aluno/","text":"Tutorial para alunos Logando no servidor Para logar no servidor, basta acessar o link disponibilizado pelo professor que o levara para a tela de login: No inicio sua senha sera a mesma que o nome de usuario, ao logar recomenda-se trocar a senha imediatamente: Para isso basta clicar em [trocar senha] no canto superior esquerdo: E realizar a troca de senha: Enviando desafio Para realizar um envio basta encotrar o arquivo nos seus diretorios e clicar em enviar Errado Caso a entrega nao esteja correta aparecera um feed back como o seguinte: Ou caso o arquivo seja invalido: Correto Caso a entrega esteja correta aparecera um feed back como o seguinte:","title":"Alunos"},{"location":"aluno/#tutorial-para-alunos","text":"","title":"Tutorial para alunos"},{"location":"aluno/#logando-no-servidor","text":"Para logar no servidor, basta acessar o link disponibilizado pelo professor que o levara para a tela de login: No inicio sua senha sera a mesma que o nome de usuario, ao logar recomenda-se trocar a senha imediatamente: Para isso basta clicar em [trocar senha] no canto superior esquerdo: E realizar a troca de senha:","title":"Logando no servidor"},{"location":"aluno/#enviando-desafio","text":"Para realizar um envio basta encotrar o arquivo nos seus diretorios e clicar em enviar","title":"Enviando desafio"},{"location":"aluno/#errado","text":"Caso a entrega nao esteja correta aparecera um feed back como o seguinte: Ou caso o arquivo seja invalido:","title":"Errado"},{"location":"aluno/#correto","text":"Caso a entrega esteja correta aparecera um feed back como o seguinte:","title":"Correto"},{"location":"api/","text":"API - Endpoints Default host = 0.0.0.0 GET: host/ ID - Recebe como argumento do html (host/?ID<\"numero\">) -> Numero do desafio que voce esta checando Respostas : \"\"Ainda n\u00e3o h\u00e1 desafios! Volte mais tarde.\" - Quando ha tentativa de get e ainda nao foram colocados desafios para serem realizados \"\"Oops... Desafio invalido!\"\" - Quando o ID acessado nao tem um desafio relacionado. \"Sem Erros\" - Seu Post foi acetio. Post: host/ ID - Recebe como argumento do html (host/?ID<\"numero\">) -> Numero do desafio que voce esta enviando como resposta Respostas : \"Sorry... Prazo expirado!\" - Quando realizado um post depois de terminado o prazo. \"Boa tentativa, mas n\u00e3o vai dar certo!\" - Tentou enviar a resposta em branco. \"Sem Erros\" - Seu Post foi acetio. POST: host/pass ID - Envia o form da pagina como argumento do request. Respostas : \"As novas senhas nao batem\" - Quando as novas senhas nao coincidem. \"A senha antiga nao confere\" - Erro de digito na senha que esta sendo trocada. \"Senha alterada com sucesso\" - Sucesso na troca de senhas. host/logout URL para realizar o logout.","title":"Endpoints da API"},{"location":"api/#api-endpoints","text":"Default host = 0.0.0.0","title":"API - Endpoints"},{"location":"desenvolvedor/","text":"Tutorial para Desenvolvimento Configurando ambiente de desenvolvimento Priemiramente e necessaria sqlite3 Sistemas baseados em debian (Ubuntu, Debian etc.): $ sudo apt-get update $ sudo apt-get install sqlite3 Sistemas baseado em RPM (RHEL, CentOS, Fedora etc.): $ sudo yum update $ sudo yum install sqlite Tambem e necessaria a instalacao do flask e o flask_httpauth com: $ sudo pip3 install flask $ sudo pip3 install flask_httpauth Instalacao do software Para a instalacao do software e necessario entrar no ambiente do sqlite3 para criar o banco de dados utilizando $ sqlite3 quiz.db Uma vez no ambiente do sqlite3 rode o script de criacao do banco de dadods com $ .read quiz.sql Com o banco de dados criados e necessario criar agora os usuarios. Crie um arquivo chamado users.csv e siga as instrucoes de criacao de usuario na aba professores. Com isso o software esta pronto. Para rodar basta executar: $ python3 softdes.py Estrutura do codigo As funcoes que constituem o codigo sao: lambda_handler(event):Recebe as informacoes de um envio, realiza o teste e retorna o feedback converte_data(orig): Muda a ordem de chunks de uma string de entrada get_quizes(user): Resgata os todos os quizes de um usuario get_user_quiz(userid, quizid): Resgata um quiz expecifico de um usuario na tabela USERQUIZ set_user_quiz(userid, quizid, sent, answer, result): Designa um quiz para um aluno com sua resposta e outras informacoes get_quiz(id_q, user): Resgata um quiz expecifico de um usuario na tabela QUIZ set_info(pwd, user): Designa as credenciais a um usuario get_info(user): Resgata as crendenciais de um usuario get_password(username): Resgata a senha de um usuario hash_pw(password): Faz o Hash da senha para armazenagem","title":"Desenvolvedores"},{"location":"desenvolvedor/#tutorial-para-desenvolvimento","text":"","title":"Tutorial para Desenvolvimento"},{"location":"desenvolvedor/#configurando-ambiente-de-desenvolvimento","text":"Priemiramente e necessaria sqlite3 Sistemas baseados em debian (Ubuntu, Debian etc.): $ sudo apt-get update $ sudo apt-get install sqlite3 Sistemas baseado em RPM (RHEL, CentOS, Fedora etc.): $ sudo yum update $ sudo yum install sqlite Tambem e necessaria a instalacao do flask e o flask_httpauth com: $ sudo pip3 install flask $ sudo pip3 install flask_httpauth","title":"Configurando ambiente de desenvolvimento"},{"location":"desenvolvedor/#instalacao-do-software","text":"Para a instalacao do software e necessario entrar no ambiente do sqlite3 para criar o banco de dados utilizando $ sqlite3 quiz.db Uma vez no ambiente do sqlite3 rode o script de criacao do banco de dadods com $ .read quiz.sql Com o banco de dados criados e necessario criar agora os usuarios. Crie um arquivo chamado users.csv e siga as instrucoes de criacao de usuario na aba professores. Com isso o software esta pronto. Para rodar basta executar: $ python3 softdes.py","title":"Instalacao do software"},{"location":"desenvolvedor/#estrutura-do-codigo","text":"As funcoes que constituem o codigo sao: lambda_handler(event):Recebe as informacoes de um envio, realiza o teste e retorna o feedback converte_data(orig): Muda a ordem de chunks de uma string de entrada get_quizes(user): Resgata os todos os quizes de um usuario get_user_quiz(userid, quizid): Resgata um quiz expecifico de um usuario na tabela USERQUIZ set_user_quiz(userid, quizid, sent, answer, result): Designa um quiz para um aluno com sua resposta e outras informacoes get_quiz(id_q, user): Resgata um quiz expecifico de um usuario na tabela QUIZ set_info(pwd, user): Designa as credenciais a um usuario get_info(user): Resgata as crendenciais de um usuario get_password(username): Resgata a senha de um usuario hash_pw(password): Faz o Hash da senha para armazenagem","title":"Estrutura do codigo"},{"location":"professor/","text":"Tutorial para professores Adicionando Usiarios Para adicionar um novo usurio basta adiciona-lo ao arquivo users.csv fornecendo-o um nome e um tipo como na imagem abaixo. Lucca,aluno Gabriel,aluno Igor,Professor E entao rodar o codigo addUser.py Adicionando um novo quiz Para adicionar um novo quiz e necesserio que primeiro se tenha o sqlite intalado e entao se roda por exemplo (\"<<>>\" Para axilio do preechimento) >$sqlite ><sqlite> Insert into QUIZ(numb, release, expire, problem, tests, results, diagnosis) values (<<NUMERO DO DESAFIO (Inteiro)>>, <<Data da adicao (\"aaaa-mm-dd\")>>, <<Data e hora limite da entrega>>(\"aaaa-mm-dd hh:mm:ss\"), <<Enunciado do problema>> (string), <<Entrada dos testes>>(Ex:\"[[1],[2],[3]]\"), <<Resultado esperado para os testes>>(Ex:(\"[0, 0, 0]\"), <<Feedback dos testes>>(Ex:\"['a','b','c']\");","title":"Professores"},{"location":"professor/#tutorial-para-professores","text":"","title":"Tutorial para professores"},{"location":"professor/#adicionando-usiarios","text":"Para adicionar um novo usurio basta adiciona-lo ao arquivo users.csv fornecendo-o um nome e um tipo como na imagem abaixo. Lucca,aluno Gabriel,aluno Igor,Professor E entao rodar o codigo addUser.py","title":"Adicionando Usiarios"},{"location":"professor/#adicionando-um-novo-quiz","text":"Para adicionar um novo quiz e necesserio que primeiro se tenha o sqlite intalado e entao se roda por exemplo (\"<<>>\" Para axilio do preechimento) >$sqlite ><sqlite> Insert into QUIZ(numb, release, expire, problem, tests, results, diagnosis) values (<<NUMERO DO DESAFIO (Inteiro)>>, <<Data da adicao (\"aaaa-mm-dd\")>>, <<Data e hora limite da entrega>>(\"aaaa-mm-dd hh:mm:ss\"), <<Enunciado do problema>> (string), <<Entrada dos testes>>(Ex:\"[[1],[2],[3]]\"), <<Resultado esperado para os testes>>(Ex:(\"[0, 0, 0]\"), <<Feedback dos testes>>(Ex:\"['a','b','c']\");","title":"Adicionando um novo quiz"}]}